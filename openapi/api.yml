openapi: 3.0.0
info:
  title: "FILES API"
  description: "API for working with files"
  version: "1.0.0"

servers:
  - url: "/api"
paths:
  /sign-up:
    post:
      summary: Register a new user
      operationId: register_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /login:
    post:
      summary: Authenticate user and get access token
      operationId: login_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /users/files:
    post:
      summary: Upload a file for a user
      operationId: upload_file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: File uploaded successfully
        '400':
          description: Bad request - Invalid file
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No file provided
        '400':
          description: Bad request - Empty filename
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Empty filename
        '400':
          description: Bad request - Invalid file format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid file format. Only CSV files are allowed.
        '401':
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid token
    get:
      summary: Get user files with column information
      operationId: get_user_files
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        file_id:
                          type: integer
                        filename:
                          type: string
                        columns:
                          type: array
                          items:
                            type: string
                        error:
                          type: string
  /users/files/{file_id}:
    delete:
      summary: Delete a file owned by the current user
      operationId: delete_file
      parameters:
        - name: file_id
          in: path
          description: ID of the file to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: File deleted successfully
        '401':
          description: Unauthorized - Invalid token
        '404':
          description: File not found or does not belong to the current user
    get:
      summary: Get file data with optional filtering and sorting
      operationId: get_file_data_by_id
      parameters:
        - in: path
          name: file_id
          required: true
          schema:
            type: integer
        - in: query
          name: filters
          schema:
            type: string
          style: form
          explode: false
          examples:
            filterExample:
              value: Col1__operator__value1,Col2__operator__value2
              summary: Example of filter values
        - in: query
          name: sort_columns(column:ascending(bool))
          schema:
            type: string
          style: form
          examples:
            sortExample:
              value: Column1:true,Column2:false
              summary: Example of sort columns
          style: form
      responses:
        '200':
          description: Successful operation
          content:
            application/csv:
              schema:
                type: string
                format: binary
